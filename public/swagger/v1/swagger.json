{
  "swagger": "2.0",
  "info": {
    "description": "Domain registration statistics API providing information about registrars, TLDs, and domain statistics. Free for public use.",
    "version": "1.0",
    "title": "DomainDumper API",
    "termsOfService": "https://www.domaindumper.com/tos/",
    "contact": {
      "email": "support@domaindumper.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "statistics.domaindumper.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "registrar",
      "description": "Domain registrar operations"
    },
    {
      "name": "root",
      "description": "TLD and root zone operations"
    },
    {
      "name": "stats",
      "description": "Domain statistics operations"
    },
    {
      "name": "tlds",
      "description": "TLD list operations"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/registrar/registrars.json": {
      "get": {
        "tags": ["registrar"],
        "summary": "Get basic registrar list",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Example Registrar"
                  },
                  "url": {
                    "type": "string",
                    "example": "https://example.com"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/registrar/registrars-details.json": {
      "get": {
        "tags": ["registrar"],
        "summary": "Get detailed registrar information",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "details": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/root/db.json": {
      "get": {
        "tags": ["root"],
        "summary": "Get root zone database",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "manager": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/root/detail/{tldName}/{tldName}.json": {
      "get": {
        "tags": ["root"],
        "summary": "Get TLD details",
        "parameters": [
          {
            "name": "tldName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "TLD name (e.g., com, net)",
            "example": "com"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "manager": {
                  "type": "string"
                },
                "rootServers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "TLD not found"
          }
        }
      }
    },
    "/stats/{year}/{month}/{date}/stats.json": {
      "get": {
        "tags": ["stats"],
        "summary": "Get domain statistics",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Year (YYYY)",
            "example": "2024"
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Month (MM)",
            "example": "02"
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Date (DD)",
            "example": "19"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "countryStats": {
                  "type": "object"
                },
                "registrarStats": {
                  "type": "object"
                },
                "tldStats": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Statistics not found"
          }
        }
      }
    },
    "/tlds/tlds_list.json": {
      "get": {
        "tags": ["tlds"],
        "summary": "Get TLDs list",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read:pets": "read your pets",
        "write:pets": "modify pets in your account"
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "type": "string",
            "xml": {
              "name": "photoUrl"
            }
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "xml": {
              "name": "tag"
            },
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about DomainDumper",
    "url": "https://www.domaindumper.com"
  }
}